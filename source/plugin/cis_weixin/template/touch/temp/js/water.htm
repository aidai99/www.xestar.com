<script language="javascript" id="script_water" reload="1">
	function waterfall(v) {
		var v = typeof(v) == "undefined" ? {} : v;
		var column = 1;
		var totalwidth = typeof(v.totalwidth) == "undefined" ? 0 : v.totalwidth;
		var totalheight = typeof(v.totalheight) == "undefined" ? 0 : v.totalheight;
		var parent = typeof(v.parent) == "undefined" ? document.getElementById("waterfall") : v.parent;
		var container = typeof(v.container) == "undefined" ? document.getElementById("waterfallist") : v.container;
		var maxcolumn = typeof(v.maxcolumn) == "undefined" ? 0 : v.maxcolumn;
		var space = typeof(v.space) == "undefined" ? 0 : v.space;
		var index = typeof(v.index) == "undefined" ? 0 : v.index;
		var tag = typeof(v.tag) == "undefined" ? "li" : v.tag;
	
		var columnsheight = typeof(v.columnsheight) == "undefined" ? [] : v.columnsheight;
	  
		function waterfallMin() {
			var min = 0;
			var index = 0;
			if(columnsheight.length > 0) {
				min = Math.min.apply({}, columnsheight);
				for(var i = 0, j = columnsheight.length; i < j; i++) {
					if(columnsheight[i] == min) {
						index = i;
						break;
					}
				}
			}
			return {"value": min, "index": index};
		}
		function waterfallMax() {
			return Math.max.apply({}, columnsheight);
		}
	
		var mincolumn = {"value": 0, "index": 0};
		var totalelem = [];
		var singlewidth = 0;
		totalelem = parent.getElementsByTagName(tag);
		
		if(totalelem.length > 0) {
			column = 2;
			if(maxcolumn && column > maxcolumn) {
				column = maxcolumn;
			}
			if(!column) {
				column = 1;
			}
			if(columnsheight.length != column) {
				columnsheight = [];
				for(var i = 0; i < column; i++) {
					columnsheight[i] = 0;
				}
				index = 0;
			}
			
			singlewidth = totalelem[0].offsetWidth + space;
			totalwidth = singlewidth * column + space;
			
			for(var i = index, j = totalelem.length; i < j; i++) {
				var sz= totalelem[i].id.split("/");
        var hg=(((singlewidth-10)*sz[2])/sz[1]).toFixed(2);
				$('#cover'+sz[0]).css('height', hg);

				mincolumn = waterfallMin();
				totalelem[i].style.position = "absolute";
				totalelem[i].style.left = singlewidth * mincolumn.index + "px";
				totalelem[i].style.top = mincolumn.value + "px";
				columnsheight[mincolumn.index] = columnsheight[mincolumn.index] + totalelem[i].offsetHeight + space;
				totalheight = Math.max(totalheight, waterfallMax());
				index++;
			}
			
			parent.style.height = totalheight + "px";
			parent.style.width = totalwidth + "px";
		}
		
		return {"index": index, "totalwidth": totalwidth, "totalheight": totalheight, "columnsheight" : columnsheight};
	}
	
	var wf = {};
	
	$('.body_main').ready(function(){
		if($('.body_main #waterfall').length >0) {
			wf = waterfall();
		}
	});
	
	<!--{if $page < $_G['page_next']}-->
		var page = $page + 1,
			maxpage = Math.min($page + 10,$maxpage + 1),
			stopload = 0,
			scrolltimer = null,
			tmpelems = [],
			tmpimgs = [],
			markloaded = [],
			imgsloaded = 0,
			loadready = 0,
			showready = 1,
			nxtpgurl = '{$urlstr}&page=',
			wfloading = "«Î…‘∫Ú...",
			pgbtn = $('.body_main #pgbtn').attr('rel');
	<!--{/if}-->	
		
	function loadmore() {
		var url = nxtpgurl + page + '&t=' + parseInt((+new Date()/1000)/(Math.random()*1000));

		$.ajax({
			type : 'GET',
			url : url,
			dataType : 'html'
		})
		
		.success(function(s) {
			s = s.replace(/\n|\r/g, "");
			
			if(s.indexOf("id=\"pgbtn\"") == -1) {
				$('.body_main #pgbtn').hide();
				stopload++;
				$('.body_main').onscroll = null;
			}
      
			
			s = s.substring(s.indexOf("<ul id=\"waterfall\""), s.indexOf("<div id=\"tmppic\""));
			s = s.replace("id=\"waterfall\"", "");
			
			$('.body_main #tmppic').append(s);
			loadready = 1;
			
		})
		.error(function() {
			window.location.href = url;
		});

	}
	$('.body_main')[0].scrollHeight
	function scrollwater(){
		if(scrolltimer == null) {
			scrolltimer = setTimeout(function () {
				try {
					if(page < maxpage && stopload < 2 && showready && ($('.body_main').scrollTop() + $('.body_main').height() + 300) >= $('.body_main')[0].scrollHeight) {
						pgbtn.innerHTML = wfloading;
						loadready = 0;
						showready = 0;
						loadmore();
						tmpelems = $('.body_main #tmppic')[0].getElementsByTagName("li");

						var waitingtimer = setInterval(function () {
							stopload >= 2 && clearInterval(waitingtimer);
							if(loadready && stopload < 2) {
								if(!tmpelems.length) {
									page++;
									pgbtn.rel = nxtpgurl + Math.min(page, $maxpage);
									pgbtn.innerHTML = "º”‘ÿ∏¸∂‡";
									showready = 1;
									clearInterval(waitingtimer);
								}
								for(var i = 0, j = tmpelems.length; i < j; i++) {
									if(tmpelems[i]) {
										tmpimgs = tmpelems[i].getElementsByTagName("img");
										imgsloaded = 0;
										for(var m = 0, n = tmpimgs.length; m < n; m++) {
											tmpimgs[m].onerror = function () {
												this.style.display = "none";
											};
											markloaded[m] = tmpimgs[m].complete ? 1 : 0;
											imgsloaded += markloaded[m];
										}
										if(imgsloaded == tmpimgs.length) {
											$('.body_main #waterfall')[0].appendChild(tmpelems[i]);
											wf = waterfall({
												"index": wf.index,
												"totalwidth": wf.totalwidth,
												"totalheight": wf.totalheight,
												"columnsheight": wf.columnsheight
											});
										}
									}
								}
							}
						}, 40);
					}
				} catch(e) {}
				scrolltimer = null;
			}, 320);

		}				
	}

	<!--{if !$_GET['getpage']}-->
	evalscripts.push('script_water');
	<!--{/if}-->
</script>